{"version":3,"sources":["main.js"],"names":["fetch","then","res","json","bench","benchmarkTemplate","_","template","document","querySelector","innerHTML","meta","date","moment","formattedDate","format","results","reduce","col","result","isObject","suite","isArray","name","push","sortBy","html","backgroundColors","borderColors","browserList","uniq","map","browser","each","key","console","log","labels","r","ctx","getElementById","getContext","datasets","i","r2","label","Array","data","opsPerSecond","backgroundColor","borderColor","borderWidth","Chart","type","options","scales","yAxes","ticks","beginAtZero"],"mappings":";AAAAA,MAAM,0CAA0CC,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAAQF,KAAK,SAACG,GACzEC,IAAAA,EAAoBC,EAAEC,SAASC,SAASC,cAAc,uBAAuBC,WAE7EC,EAAOP,EAAMO,KACnBA,EAAKC,KAAOC,OAAOF,EAAKC,MACxBD,EAAKG,cAAgB,WACbH,OAAAA,EAAKC,KAAKG,OAAO,4BAGnBC,IAAAA,EAAUV,EAAEW,OAAOb,EAAMY,QAAS,SAACE,EAAKC,GAUtCD,OATHZ,EAAEc,SAASF,EAAIC,EAAOE,UACzBH,EAAIC,EAAOE,OAAS,IAEjBf,EAAEgB,QAAQJ,EAAIC,EAAOE,OAAOF,EAAOI,SACtCL,EAAIC,EAAOE,OAAOF,EAAOI,MAAQ,IAElCL,EAAIC,EAAOE,OAAOF,EAAOI,MAAMC,KAAKL,GACpCD,EAAIC,EAAOE,OAAOF,EAAOI,MAAQjB,EAAEmB,OAAOP,EAAIC,EAAOE,OAAOF,EAAOI,MAAO,WAEnEL,GACL,IAEGQ,EAAOrB,EAAkB,CAC9BM,KAAAA,EACAK,QAAAA,IAEDR,SAASC,cAAc,eAAeC,WAAagB,EAE7CC,IAAAA,EAAmB,CACxB,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEKC,EAAe,CACpB,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEKC,EAAcvB,EAAEmB,OAAOnB,EAAEwB,KAAKxB,EAAEyB,IAAI3B,EAAMY,QAAS,SAACG,GAAWA,OAAAA,EAAOa,YAE5E1B,EAAE2B,KAAKjB,EAAS,SAACG,EAAQe,GACxBC,QAAQC,IAAIjB,GAENkB,IAAAA,EAAS/B,EAAEW,OAAOE,EAAQ,SAACD,EAAKoB,EAAGJ,GAEjChB,OADPA,EAAIM,KAAKU,GACFhB,GACL,IAEGqB,EAAM/B,SAASgC,eAAeN,GAAKO,WAAW,MAE9CC,EAAWpC,EAAEyB,IAAIF,EAAa,SAACG,EAASW,GACtCrC,OAAAA,EAAEW,OAAOE,EAAQ,SAACD,EAAKoB,GAetBpB,OAdPZ,EAAE2B,KAAKK,EAAG,SAACM,GACPA,EAAGZ,UAAYA,IACjBd,EAAI2B,MAAQD,EAAGZ,QACXc,MAAMxB,QAAQJ,EAAI6B,QACrB7B,EAAI6B,KAAO,IAEZ7B,EAAI6B,KAAKvB,KAAKoB,EAAGI,iBAInB9B,EAAI+B,gBAAkBtB,EAAiBgB,GACvCzB,EAAIgC,YAActB,EAAae,GAC/BzB,EAAIiC,YAAc,EAEXjC,GACL,MAGAkC,IAAAA,MAAMb,EAAK,CACdc,KAAM,MACNN,KAAM,CACLV,OAAQA,EACRK,SAAUA,GAEXY,QAAS,CACRC,OAAQ,CACPC,MAAO,CAAC,CACPC,MAAO,CACNC,aAAa","file":"main.0f6e40ed.js","sourceRoot":"..","sourcesContent":["fetch(\"./assets/results/benchmark-0.10.2.json\").then((res) => res.json()).then((bench) => {\n\tconst benchmarkTemplate = _.template(document.querySelector(\"#benchmark-template\").innerHTML);\n\n\tconst meta = bench.meta;\n\tmeta.date = moment(meta.date);\n\tmeta.formattedDate = function(){\n\t\treturn meta.date.format(\"MMMM Do YYYY, h:mm:ss a\");\n\t};\n\n\tconst results = _.reduce(bench.results, (col, result) => {\n\t\tif(!_.isObject(col[result.suite])){\n\t\t\tcol[result.suite] = {};\n\t\t}\n\t\tif(!_.isArray(col[result.suite][result.name])){\n\t\t\tcol[result.suite][result.name] = [];\n\t\t}\n\t\tcol[result.suite][result.name].push(result);\n\t\tcol[result.suite][result.name] = _.sortBy(col[result.suite][result.name], \"browser\");\n\n\t\treturn col;\n\t}, {});\n\n\tconst html = benchmarkTemplate({\n\t\tmeta,\n\t\tresults\n\t});\n\tdocument.querySelector(\"#benchmarks\").innerHTML += html;\n\n\tconst backgroundColors = [\n\t\t'rgba(255, 99, 132, 0.2)',\n\t\t'rgba(54, 162, 235, 0.2)',\n\t\t'rgba(255, 206, 86, 0.2)',\n\t\t'rgba(75, 192, 192, 0.2)',\n\t\t'rgba(153, 102, 255, 0.2)',\n\t\t'rgba(255, 159, 64, 0.2)'\n\t];\n\tconst borderColors = [\n\t\t'rgba(255, 99, 132, 1)',\n\t\t'rgba(54, 162, 235, 1)',\n\t\t'rgba(255, 206, 86, 1)',\n\t\t'rgba(75, 192, 192, 1)',\n\t\t'rgba(153, 102, 255, 1)',\n\t\t'rgba(255, 159, 64, 1)'\n\t];\n\tconst browserList = _.sortBy(_.uniq(_.map(bench.results, (result) => result.browser)));\n\n\t_.each(results, (result, key) => {\n\t\tconsole.log(result);\n\n\t\tconst labels = _.reduce(result, (col, r, key) => {\n\t\t\tcol.push(key);\n\t\t\treturn col;\n\t\t}, []);\n\n\t\tconst ctx = document.getElementById(key).getContext(\"2d\");\n\n\t\tconst datasets = _.map(browserList, (browser, i) => {\n\t\t\treturn _.reduce(result, (col, r) => {\n\t\t\t\t_.each(r, (r2) => {\n\t\t\t\t\tif(r2.browser === browser){\n\t\t\t\t\t\tcol.label = r2.browser;\n\t\t\t\t\t\tif(!Array.isArray(col.data)){\n\t\t\t\t\t\t\tcol.data = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcol.data.push(r2.opsPerSecond);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tcol.backgroundColor = backgroundColors[i];\n\t\t\t\tcol.borderColor = borderColors[i];\n\t\t\t\tcol.borderWidth = 1;\n\n\t\t\t\treturn col;\n\t\t\t}, {});\n\t\t});\n\n\t\tnew Chart(ctx, {\n\t\t\ttype: \"bar\",\n\t\t\tdata: {\n\t\t\t\tlabels: labels,\n\t\t\t\tdatasets: datasets\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tscales: {\n\t\t\t\t\tyAxes: [{\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tbeginAtZero: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n});"]}